source ./chk/handling.ch

# Contem somente as caixas de dialogo com as informacoes necessarias;


	# Verifica retorno de erro zenity;
warningReturn() {

	case $1 in
		1 | default) zenity --error --width=200 --height=100 \
				--text="\nEntrada inválida/vazia."
			kill -9 $$
			;;
	esac
}


	# Funcao principal, contendo menu de opcoes;
selectFunction() {

option1='Backup Ubiquiti'
option2='Report devices Ubiquiti (MAC+Modelo+User)'
option3="Endereços ativos"
#option4=

	FSELECT=$(zenity --width=450 --height=200 \
		--list --title="TITULO" --text="O que deseja fazer? " \
			--radiolist --column "Check" --column "Função" \
				TRUE "$option1" FALSE "$option2" FALSE "$option3")

	warningReturn $?

	verifyOption "$FSELECT"
}



	# Seleciona o modo de execucao, por address list ou range de IP;
selectModeExecution() {

	MOD=$(zenity --width=200 --height=150 \
		--list --title="TITULO" --text="Selecione o modo de execução:" \
			--radiolist --column "" --column="Mode" \
				TRUE "Range de IP" FALSE "Address list")

	warningReturn $?

	verifyModeExec "$MOD" "addressEntry" "selectFile" 

	# Chamada de funcao handling para executar dataAccess
	handData "dataAccess"

}


#TODO: Rever a necessidade do case;
	# Seleciona o arquivo a ser lido por funcoes posteriores;
selectFile() {

FILE=$(zenity --file-selection --title="Selecione o arquivo que\
	contenha os enderecos IP")

	case $? in
		0) zenity --info --width=275 --height=130 \
				--text="\nArquivo selecionado: \n\n $FILE\n"
			modeFunction='handFileToAccess "$FILE"'
			;;

		1) zenity --warning \
				--text="\nNenhum arquivo selecionado."
			exit 10
			;;

		-1) zenity --error \
			--text="\nOcorreu algum erro. Reexecute a aplicaçao"
			$0
			;;
	esac
}



saveFiles() {

	dstFILES=$(zenity --file-selection --directory \
		--title="Salvar arquivos de backup em: ")

	case $? in
		1) zenity --warning --width=400 --height=100 \
			--text="\nNenhum arquivo de destino criado/selecionado. \n\nSera salvo em /tmp/log.txt"
			dstFILES="~/backup-$(date +%d%m%Y_%H%M)"
			;;
	esac

echo "$dstFILES"
unset dstFILES
}


	# Seleciona/cria um arquivo para salvar um relatorio;
saveFileReport() {

	toFILE=$(zenity --file-selection --filename=/tmp/log.txt --save --confirm-overwrite \
		--title="Salvar relatorio de saida em: ")

	case $? in
		1) zenity --warning --width=400 --height=100 \
			--text="\nNenhum arquivo de destino criado/selecionado. \n\nSera salvo em /tmp/log.txt"
			toFILE='/tmp/log.txt'
			;;
	esac
}



	# Recebe os dados de acesso ao equipamento;
dataAccess() {
	UaP=$(zenity --title="Usuário e senha dos dispositivos" \
		--password --username)

	warningReturn $?

	echo $(echo $UaP | cut -d'|' -f1)+$(echo $UaP | cut -d'|' -f2)
	unset UaP
}



	# Recebe endereco IP inicial e final
function addressEntry {

	modeFunction=handAddressToAccess

IP=$(zenity --forms --title="Definição da faixa de endereços" \
	--text="Informe a range de IP" --separator="," \
		--add-entry="IP inicial:" \
		--add-entry="IP final:" )

	warningReturn $?

	checkOcteto "$IP" "addressEntry"
}