

backupUbiquiti() {


# NECESSARIO COPIAR NOME DO DISPOSITIVO E IP PARA ALTERAR O NOME DO ARQUIVO;
	sshpass -p "$2" scp -P 22 $1@$3:/tmp/system.cfg "$4"

#	echo "backupUbiquti - Funcao vazia - arg1=$1, arg2=$2, arg3=$3 arg4=$4"

	out=$(echo $?)


unset out
}




# Em funcoes que retornam valores, para fins de relatório, devem retornar:
#	- 1o = O conteudo;
#	- 2o = O retorno da sua execucao;
# 	* Amabas em um único "echo", separados por "+":
#		ex: echo "$report+$return"

reportDeviceAndMAC() {

#	run=$(sshpass -p "$2" ssh -p 22 -o 'StrictHostKeyChecking no' $1@$3 'echo "`cat /etc/board.info | grep board.name | cut -d= -f2`+\
#		`cat /etc/board.info | grep board.hwaddr | cut -d= -f2`+`cat /tmp/system.cfg | grep ppp.1.name | cut -d= -f2 | head -n 1`+\
#			`cat /tmp/system.cfg | grep wireless.1.ssid | cut -d= -f2`+`/usr/www/signal.cgi | grep signal | cut -d- -f2 | cut -c-2`"')

run=$(sshpass -p "$2" ssh -p 22 -o 'StrictHostKeyChecking no' $1@$3 'echo "`cat /etc/board.info | grep board.name | cut -d= -f2`+\
		`cat /etc/board.info | grep board.hwaddr | cut -d= -f2`+`cat /tmp/system.cfg | grep ppp.1.name | cut -d= -f2 | head -n 1`"')


	out=$(echo $?)

	if [ "$out" == 255 ]; then
#		run=$(sshpass -p "$2" ssh -p 7722 -o 'StrictHostKeyChecking no' $1@$3 'echo "`cat /etc/board.info | grep board.name | cut -d= -f2`+\
#		`cat /etc/board.info | grep board.hwaddr | cut -d= -f2`+`cat /tmp/system.cfg | grep ppp.1.name | cut -d= -f2  | head -n 1`+\
#			`cat /tmp/system.cfg | grep wireless.1.ssid | cut -d= -f2`+`/usr/www/signal.cgi | grep signal | cut -d- -f2 | cut -c-2`"')

		run=$(sshpass -p "$2" ssh -p 7722 -o 'StrictHostKeyChecking no' $1@$3 'echo "`cat /etc/board.info | grep board.name | cut -d= -f2`+\
		`cat /etc/board.info | grep board.hwaddr | cut -d= -f2`+`cat /tmp/system.cfg | grep ppp.1.name | cut -d= -f2  | head -n 1`"')

		if [ $? == 0 ]; then
			out=0
		fi

	fi
	
	echo $run+$out

unset out run
}


removeLinesDuplicate() {

echo "Remover linhas duplicadas - ARG1:$1, ARG2:$2"

}